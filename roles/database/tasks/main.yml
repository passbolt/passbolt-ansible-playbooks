---
- name: Install and configure MariaDB only when running a local database.
  when: database_configuration.host is undefined or database_configuration.host == None
  block:
    - name: Install MariaDB.
      ansible.builtin.package:
        name: mariadb-server
        state: present

    - name: Enable MariaDB service
      ansible.builtin.service:
        name: mariadb
        enabled: true

    - name: Start MariaDB service
      ansible.builtin.service:
        name: mariadb
        state: started

    - name: "Install Ansible dependency for managing MariaDB"
      ansible.builtin.package:
        name: "{{ (ansible_os_family == 'Debian') | ternary('python3-pymysql', 'python3-PyMySQL') }}"
        state: present

    - name: Delete MariaDB anonymous users.
      community.mysql.mysql_user:
        name: ''
        host_all: true
        state: absent
        column_case_sensitive: false
        login_unix_socket: "{{ (ansible_os_family == 'Debian') | ternary('/var/run/mysqld/mysqld.sock', '/var/lib/mysql/mysql.sock') }}"

    - name: Create Passbolt's database.
      community.mysql.mysql_db:
        name: "{{ database_configuration.dbname }}"
        state: present
        login_unix_socket: "{{ (ansible_os_family == 'Debian') | ternary('/var/run/mysqld/mysqld.sock', '/var/lib/mysql/mysql.sock') }}"

    - name: Create Passbolt's database user.
      community.mysql.mysql_user:
        name: "{{ database_configuration.username }}"
        password: "{{ database_configuration.password }}"
        priv: "{{ database_configuration.dbname }}.*:ALL"
        state: present
        column_case_sensitive: false
        login_unix_socket: "{{ (ansible_os_family == 'Debian') | ternary('/var/run/mysqld/mysqld.sock', '/var/lib/mysql/mysql.sock') }}"
